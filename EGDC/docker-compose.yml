version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-egdc
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # Basic authentication
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-your-secure-password}
      
      # Host configuration
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - WEBHOOK_URL=${N8N_WEBHOOK_URL:-http://localhost:5678/}
      
      # Timezone
      - GENERIC_TIMEZONE=${TIMEZONE:-America/New_York}
      
      # Database (using SQLite by default, can be changed to PostgreSQL)
      - DB_TYPE=sqlite
      - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
      
      # Security
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-encryption-key}
      
      # Workflow settings
      - EXECUTIONS_TIMEOUT=3600
      - EXECUTIONS_TIMEOUT_MAX=7200
      - EXECUTIONS_DATA_SAVE_ON_ERROR=all
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=all
      - EXECUTIONS_DATA_MAX_AGE=336
      
      # Performance
      - N8N_PAYLOAD_SIZE_MAX=16
      
    volumes:
      - n8n_data:/home/node/.n8n
      - /var/run/docker.sock:/var/run/docker.sock:ro
    
    networks:
      - n8n_network

  # Optional: PostgreSQL database for n8n (production setup)
  # Uncomment if you want to use PostgreSQL instead of SQLite
  # n8n-postgres:
  #   image: postgres:15-alpine
  #   container_name: n8n-postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=n8n
  #     - POSTGRES_USER=n8n
  #     - POSTGRES_PASSWORD=${N8N_DB_PASSWORD:-n8n-password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - n8n_network

  # Optional: Redis for queue mode (high-performance setup)
  # redis:
  #   image: redis:7-alpine
  #   container_name: n8n-redis
  #   restart: unless-stopped
  #   networks:
  #     - n8n_network

  # Optional: Nginx reverse proxy for production
  # nginx:
  #   image: nginx:alpine
  #   container_name: n8n-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - n8n
  #   networks:
  #     - n8n_network

volumes:
  n8n_data:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  n8n_network:
    driver: bridge 